[tox]
envlist = 
    py{38}
    docs
    flake8
skip_missing_interpreters = True


[testenv]
deps =
    -r requirements/tests.txt

commands = pytest --basetemp={envtmpdir} {posargs}


[testenv:dev]
description = development environment
basepython = python3.8
usedevelop = True
commands = 
    python -m pip install --upgrade pip
    pip install -q pip-tools
    pip-compile requirements/base.in 
    pip-compile requirements/dev.in 
    pip-compile requirements/docs.in 
    pip-compile requirements/tests.in
    pip install -q -e . -r requirements/dev.txt


[testenv:docs]
deps = -r requirements/docs.txt
commands = 
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html
    python -m doctest README.rst


[testenv:flake8]
basepython = python3.8
skip_install = true
deps = flake8
commands = flake8


[testenv:bo4e-from-pip]
basepython = python3.8
skip_install = true
deps = -r requirements/tests.txt
commands = 
    pip install bo4e
    python -m pytest


[testenv:test_packaging]
basepython = python3.8
skip_install = true
deps =
    setuptools
    wheel
    twine
commands = 
    python setup.py sdist bdist_wheel
    twine check dist/*


[flake8]
; can also be placed in .flake8, setup.cfg or in tox.ini
exclude =
    .git
    .tox
ignore =
    # line too long
    E501
max-line-length = 79
per-file-ignores =
    tests/test_adresse.py:F841
    tests/test_marktlokation.py:F841
    tests/test_geokoordinaten.py:F841
    tests/test_geschaeftsobjekt.py:F841
    src/bo4e/bo/marktlokation.py:E203

; ------------------------------------------

; the following lines are not used now.
; these are just some ideas for the future.

; [testenv:black]
; description = autoformat with black


; [testenv:lint]
; basepython = python3.8
; skip_install = true
; deps =
;     pre-commit
; passenv = HOMEPATH  # needed on Windows
; commands =
;     pre-commit run --all-files


; [testenv:changelog]
; basepython = python3.8
; deps = towncrier
; skip_install = true
; commands = towncrier --draft


; [testenv:coverage-report]
; deps = coverage
; skip_install = true
; commands =
;     coverage combine
;     coverage report


